/*
Copyright (C) 2020 Yu Wan <wanyuac@126.com>
Licensed under the GNU General Public License v3.0
Publication: 29/03/2020
*/

params {
    fastq = "*_{1,2}.fastq.gz"  // Paired FASTQ files taken as input
    assemblyDir = "assembly"  // Output directory for assemblies
    unicycler = "./anaconda3/envs/unicycler/bin"  // Directory of Unicycler
    queueSize = 30  // Number of concurrent jobs submitted to the PBS
}


executor {
	$local {
		cpus = 4
		memory = "32 GB"  // Previous runs did not use more than 40 GB memmory.
	}
    
    $pbspro {
        queueSize = params.queueSize
    }
}


profiles {
	standard {
		process.executor = "local"
	}
    
    pbs {
        process {
            executor = "pbspro"
            clusterOptions = "-lselect=1:ncpus=4:mem=32gb"  // 4 CPUs enable 8 threads
            time = "24h"
            errorStrategy = "retry"
            maxRetries = 2
        }
    }
}


manifest {
    homePage = "https://github.com/wanyuac/Nextflow_pipeline"
    description = "Assemble paired-end short reads using Unicycler."
    mainScript = "unicycler.nf"
    version = "0.0.1"
}
